<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>cloud-client-ui</artifactId>
  <name>Cosmic Client UI</name>
  <packaging>war</packaging>
  <parent>
    <groupId>cloud.cosmic</groupId>
    <artifactId>cosmic-core</artifactId>
    <version>5.0.0-SNAPSHOT</version>
    <relativePath>../cosmic-core/pom.xml</relativePath>
  </parent>
  <dependencies>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-framework-spring-module</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-framework-spring-lifecycle</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-volume-solidfire</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-volume-cloudbyte</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-server</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-acl-static-role-based</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-dedicated-resources</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-api-limit-account-based</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-api-discovery</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-ldap</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-md5</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-pbkdf2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-plaintext</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-saml2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-user-authenticator-sha256salted</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-nvp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-contrail</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-palo-alto</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-netscaler</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
  <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-ovs</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-elb</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-midonet</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-ssp</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-internallb</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-vxlan</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-opendaylight</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-xenserver</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-baremetal</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-ucs</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-ovm</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-ovm3</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-kvm</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-hypervisor-hyperv</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-allocator-random</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-planner-user-dispersing</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
       <artifactId>cloud-plugin-planner-skip-heurestics</artifactId>
       <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-planner-user-concentrated-pod</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-planner-implicit-dedication</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-explicit-dedication</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-host-allocator-random</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-mom-rabbitmq</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-mom-inmemory</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-mom-kafka</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-framework-ipc</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-framework-quota</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-framework-rest</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-components-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-network</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-orchestration</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-schema</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage-cache</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-controller-secondary-storage</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage-image</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage-datamotion</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage-snapshot</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-engine-storage-volume</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-volume-default</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-image-default</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-image-s3</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-storage-image-swift</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-snmp-alerts</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-host-anti-affinity</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
        <groupId>cloud.cosmic</groupId>
        <artifactId>cloud-plugin-api-solidfire-intg-test</artifactId>
        <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-network-globodns</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>cloud.cosmic</groupId>
      <artifactId>cloud-plugin-database-quota</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>ru.concerteza.buildnumber</groupId>
        <artifactId>maven-jgit-buildnumber-plugin</artifactId>
        <version>1.2.6</version>
        <executions>
          <execution>
            <id>git-buildnumber</id>
            <goals>
              <goal>extract-buildnumber</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.todomap</groupId>
        <artifactId>maven-jettygzip-plugin</artifactId>
        <version>0.0.4</version>
        <configuration>
          <webappDirectory>${project.build.directory}/generated-webapp</webappDirectory>
          <outputDirectory>${project.build.directory}/generated-webapp</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>process</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <webXml>./target/generated-webapp/WEB-INF/web.xml</webXml>
          <warSourceDirectory>./target/generated-webapp</warSourceDirectory>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Revision>${git.revision}</Implementation-Revision>
              <Implementation-Branch>${git.branch}</Implementation-Branch>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>maven-jetty-plugin</artifactId>
         <version>6.1.26</version>
         <dependencies>
          <!-- specify the dependent jdbc driver here -->
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${cs.mysql.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <stopPort>9966</stopPort>
          <stopKey>stop-jetty</stopKey>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
          <webXml>${project.build.directory}/generated-webapp/WEB-INF/web.xml</webXml>
          <webAppSourceDirectory>${project.build.directory}/generated-webapp</webAppSourceDirectory>
          <webAppConfig>
            <contextPath>/client</contextPath>
            <extraClasspath>${project.build.directory}/utilities/scripts/db/;${project.build.directory}/utilities/scripts/db/db/</extraClasspath>
          </webAppConfig>
          
          <systemProperties>
              <systemProperty>
                 <name>log4j.configuration</name>
                 <value>log4j-cloud.xml</value>
              </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/client</path>
          <tomcatWebXml>${basedir}/WEB-INF/web.xml</tomcatWebXml>
          <warSourceDirectory>${project.build.directory}/generated-webapp/</warSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${basedir}/target/generated-webapp/WEB-INF/classes/scripts">
                  <fileset dir="${basedir}/../cosmic-core/scripts"/>
                </copy>
                <!-- CLOUDSTACK-1304 -->
                <chmod perm="755"
                  file="${basedir}/target/generated-webapp/WEB-INF/classes/scripts/**" type="both"/>
                <copy todir="${basedir}/target/generated-webapp/WEB-INF/">
                  <fileset dir="${basedir}/WEB-INF/">
                    <include name="web.xml"/>
                  </fileset>
                </copy>
                <copy todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/WEB-INF/classes">
                    <include name="resources/**/*"/>
                  </fileset>
                </copy>
                <copy todir="${basedir}/target/generated-webapp">
                  <fileset dir="${basedir}/../cosmic-ui"/>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/tomcatconf">
                    <include name="*.in"/>
                  </fileset>
                  <globmapper from="*.in" to="*"/>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}"/>
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/generated-webapp/WEB-INF/classes">
                  <fileset dir="${basedir}/tomcatconf">
                    <exclude name="*.in"/>
                  </fileset>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/bin">
                  <fileset dir="${basedir}/../cosmic-core/setup/bindir">
                    <include name="*.in"/>
                  </fileset>
                  <globmapper from="*.in" to="*"/>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}"/>
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/bin">
                  <fileset dir="${basedir}/bindir">
                    <include name="*.in"/>
                  </fileset>
                  <globmapper from="*.in" to="*"/>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}"/>
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/utilities/scripts/db">
                  <fileset dir="${basedir}/../cosmic-core/setup/db">
                    <include name="**/*"/>
                  </fileset>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}"/>
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/conf">
                  <fileset dir="${basedir}/tomcatconf">
                    <include name="*.in"/>
                  </fileset>
                  <globmapper from="*.in" to="*"/>
                  <filterchain>
                    <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
                      <param type="propertiesfile" value="${cs.replace.properties}"/>
                    </filterreader>
                  </filterchain>
                </copy>
                <copy overwrite="true" todir="${basedir}/target/conf">
                  <fileset dir="${basedir}/tomcatconf">
                    <exclude name="*.in"/>
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-noredist</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${noredist}">
                <echo>test</echo>
                <replaceregexp
                  file="${basedir}/target/generated-webapp/WEB-INF/classes/environment.properties"
                  match="cloud-stack-components-specification=.*"
                  replace="cloud-stack-components-specification=components-nonoss.xml" byline="true"
                />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>process-noredist-spring-context</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target if="${noredist}">
                <replaceregexp file="${basedir}/target/generated-webapp/WEB-INF/web.xml"
                  match="classpath:componentContext.xml"
                  replace="classpath:nonossComponentContext.xml" byline="true"/>
                <copy overwrite="true"
                  todir="${basedir}/target/generated-webapp/WEB-INF/classes/scripts">
                  <fileset dir="${basedir}/../cosmic-core/plugins/network-elements/cisco-vnmc/scripts">
                    <include name="**/*"/>
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- there are the jasypt libs requires by some of the python scripts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jasypt</groupId>
                  <artifactId>jasypt</artifactId>
                  <version>1.9.2</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/pythonlibs</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.jasypt</groupId>
                  <artifactId>jasypt</artifactId>
                  <version>1.9.2</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/pythonlibs</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>systemvm</id>
      <activation>
        <property>
          <name>systemvm</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-systemvm</artifactId>
          <version>${project.version}</version>
          <type>pom</type>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <!-- Copy the systemvm in the package phase as it is generated by console-proxy
            in the package phase. -->
              <execution>
                <id>copy-systemvm</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy todir="${basedir}/target/generated-webapp/WEB-INF/classes/vms">
                      <fileset dir="${basedir}/../cosmic-core/systemvm/dist">
                        <include name="systemvm.zip"/>
                        <include name="systemvm.iso"/>
                      </fileset>
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>simulator</id>
      <activation>
        <property>
          <name>simulator</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-hypervisor-simulator</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>f5</id>
      <activation>
        <property>
          <name>noredist</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-network-f5</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>nuagevsp</id>
      <activation>
        <property>
          <name>noredist</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-network-vsp</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>srx</id>
      <activation>
        <property>
          <name>noredist</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-network-srx</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>vmware</id>
      <activation>
        <property>
          <name>noredist</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-hypervisor-vmware</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-vmware-base</artifactId>
          <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-network-cisco-vnmc</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>mysqlha</id>
      <activation>
        <property>
          <name>noredist</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-plugin-database-mysqlha</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>quickcloud</id>
      <activation>
        <property>
          <name>quickcloud</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>cloud.cosmic</groupId>
          <artifactId>cloud-quickcloud</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
